class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        int water = 0;
        int left_max=0, right_max=0;
        int l=0, r=n-1;
        
        while (l <= r) {
            if (height[l] <= height[r]) {
                if (left_max <= height[l]) left_max = height[l];
                else water += left_max - height[l];
                l++;
            } else {
                if (right_max <= height[r]) right_max = height[r];
                else water += right_max - height[r];
                r--;
            }
        }
        
        while (l <= r) {
            if (height[l] <= height[r]) {
                if (left_max <= height[l]) left_max = height[l];
                else water += left_max - height[l];
                l++;
            } else {
                if (right_max <= height[r]) right_max = height[r];
                else water += right_max - height[r];
                r--;
            }
        }
        return water;
    }
};
